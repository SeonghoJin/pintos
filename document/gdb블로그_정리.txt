GDB는 디버거이고, 프로그램 수행중에 그 프로그램 내부에서 무슨 일이 일어나고 있는지 보여주는 프로그램이다. 
디버깅을 하기 위해서는 -g옵션을 넣고 컴파일/링크를 해야한다.

-코어파일 분석하기

코어파일은 충돌할 당시 프로세스의 메모리 이미지를 덤프한 것이다. 코어파일을 gdb와 함께 사용하여
프로그램의 상태를 조사하고 실패 원인을 규명할 수 있다. 
어떤 예기치 않은 일이 발생하여 비정상적인 종료가 발생할 때 운영체계는 디스크에 코어파일을 남긴다.
메모리에 관한 문제는 Checker 패키지를 사용하여 예방가능하지만, 메모리 fault를 일으키는 경우에는
충돌하면서 파일을 덤프한다. 코어파일은 일반적으로 프로세스를 진행시킨 현재 작업 디렉토리에
생성되지만 프로그램 내에서 작업디렉토리를 바꾸는 경우도 있다. 

-실행 중인 프로그램 디버깅하기 
프로세스ID 254번으로 실행중인 pgmseq라는 프로그램이 있을 때,
gdb pgmseq 254

gdb가 실행중인 프로세스에 부착되면 프로그램이 일시 중지되고, gdb명령을 사용할 수 있도록
제어권을 가져온다. 후에 detach명령을 사용하여 gdb를 실행중인 프로세스에서 떼어 낼 수 있다.

gdb명령어 종류

- list : 현재 위치에서 소스 파일의 내용을 10줄 보여준다.
- run : 프로그램을 시작한다. break가 있다면 break까지 실행
- break : 특정 라인이나 함수에 정지점을 설정한다.
- break fuction : 현재 파일 안의 함수 function에 정지점을 설정한다.
- break file:function : file안의 function에 정지점 설치
- clear : 정지점 삭제
- delete : 몇몇 정지점이나 자동으로 출력되는 표현을 삭제
- next : 다음 행을 수행 next n : 이를 n번 수행하라는 의미
- step : 한 줄씩 실행 시킨다.  함수를 포함하고 있으면 함수 내부로 들어가 한 줄 씩 실행시킨다. 
- bt : 현재 프로그램의 스택을 보여준다. 
- kill 디버깅 중인 프로그램의 실행을 취소한다. 
- cont : 현재 위치에서 프로그램을 계속 실행한다. 
- quit : gdb에서 빠져나간다.

